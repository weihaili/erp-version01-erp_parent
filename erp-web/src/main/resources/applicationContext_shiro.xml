<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- shiro filter factory equivalent default load nine build-in filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean" depends-on="erpAuthorizationFilter">
		<!-- security manager core component -->
		<property name="securityManager" ref="securityManager" />
		<!-- if user do not login,when it visit resource then auto redirect to this page -->
		<property name="loginUrl" value="/login.html" />
		<!-- when user do not have permission to visit resource then auto redirect to this page -->
		<property name="unauthorizedUrl" value="/error.html" />
		<!-- customize filter -->
		<property name="filters">
			<map>
				<entry key="perms" value-ref="erpAuthorizationFilter"></entry>
			</map>
		</property>
		<!-- filter chain definitions when url visit correspond resource the filter of authentication and authorization to deal with this url-->
		<property name="filterChainDefinitions">
			<value>
				<!-- anon -->
				/error.html = anon
				/login_*.action = anon
				/login_* = anon
				
				<!-- authorization -->
				/*_list=perms[]
				/*=perms["system menu"]
				/*=perms["basic data"]
				/*=perms["purchasing management"]
				/*=perms["sales management"]
				/*=perms["inventory management"]
				/*=perms["authority management"]
				/*=perms["statistical analysis"]
				
				/emp_updatePwd=perms[]
				/pwd.html=perms["password management"]
				/pwd.html=perms["reset password"]
				/emp_updatePwd_reset=perms["reset password"]
				
				/goodsType.html=perms["goods type"]
				/goodsType_*.action=perms["goods type"]
				/goodsType_*=perms["goods type"]
				
				/goods.html=perms["goods"]
				/goods_*.action=perms["goods"]
				/goods_*=perms["goods"]
				
				/supplier.html=perms["supplier"]
				/supplier_*.action=perms["supplier"]
				/supplier_*=perms["supplier"]
				
				/supplier.html=perms["client"]
				/supplier_*.action=perms["client"]
				/supplier_*=perms["client"]
				
				/store.html=perms["store"]
				/store_*.action=perms["store"]
				/store_*=perms["store"]
				
				/dep.html=perms["department management"]
				/dep_*.action=perms["department management"]
				/dep_*=perms["department management"]
				
				/emp.html=perms["employee management"]
				/emp_*.action=perms["employee management"]
				/emp_*=perms["employee management"]
				
				/menu.html=perms["menu"]
				/menu_*.action=perms["menu"]
				/menu_*=perms["menu"]
				/menu_getMenuTree=perms["menu"]
				/menu_getMenusByEmpuuid=perms["menu"]
				
				/order.html=perms["purchasing management"]
				/order.html=perms["purchase requisition"]
				/order_add=perms["purchase requisition"]
				/order_listByCondition=perms["purchase requisition"]
				/order_myListByPage=perms["purchase requisition"]
				
				/order.html=perms["purchase order tracking"]
				/order_listByCondition=perms["purchase order tracking"]
				
				/order.html=perms["purchase order review"]
				/order_listByCondition=perms["purchase order review"]
				/order_doCheck=perms["purchase order review"]
				
				/order.html=perms["purchase order confirmation"]
				/order_listByCondition=perms["purchase order confirmation"]
				/order_doStart=perms["purchase order confirmation"]
				
				/order.html=perms["purchase order warehousing"]
				/order_listByCondition=perms["purchase order warehousing"]
				/order_myListByPage=perms["purchase order warehousing"]
				/orderDetail_doInStore=perms["purchase order warehousing"]
				
				
				/order.html=perms["sales order entry"]
				/order_add=perms["sales order entry"]
				/store_myList=perms["sales order entry"]
				
				/order.html=perms["sale order inquiry"]
				/order_listByCondition=perms["sale order inquiry"]
				
				/order.html=perms["sale order delivery"]
				/order_listByCondition=perms["sale order delivery"]
				/store_myList=perms["sale order delivery"]
				/orderDetail_doOutStore=perms["sale order delivery"]
				
				/storeDetail.html=perms["inventory inquiry"]
				/goods_get=perms["inventory inquiry"]
				/store_get=perms["inventory inquiry"]
				/storeDetail_listByCondition=perms["inventory inquiry"]
				/storeOper_listByCondition=perms["inventory inquiry"]
				
				
				/storeOper.html=perms["inventory change record inquiry"]
				/storeQuantityWarning.html=perms["inventory qunatity warning"]
				/goods_get=perms["inventory qunatity warning"]
				/store_get=perms["inventory qunatity warning"]
				/emp_get=perms["inventory qunatity warning"]
				
				/role.html=perms["role management"]
				/roleMenuSet.html=perms["role permission management"]
				/role_readRoleMenus=perms["role permission management"]
				/role_updateRoleMenus=perms["role permission management"]
				
				/empRoleSet.html=perms["employee role management"]
				/emp_readEmpRoles=perms["employee role management"]
				/emp_updateEmpRoles=perms["employee role management"]
				
				/report_order.html=perms["annual sales ratio statistics"]
				/report_orderReport=perms["annual sales ratio statistics"]
				
				/report_trend.html=perms["monthly sales trend"]
				/report_trendReport=perms["monthly sales trend"]

				<!-- authc -->
				/*.html = authc
				/*.action=authc
				/*=authc
			</value>
		</property>
	</bean>

	<!-- security manager -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="erpRealm"></property>
	</bean>

	<bean id="erpRealm" class="org.cn.kkl.erp.realm.ErpRealm">
		<property name="empBiz" ref="empBiz"></property>
		<property name="menuBiz" ref="menuBiz"></property>
	</bean>
	
	<bean id="erpAuthorizationFilter" class="org.cn.kkl.erp.filter.ErpAuthorizationFilter"></bean>
	
	<!-- boot shiro annotation -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
			depends-on="lifecycleBeanPostProcessor" >
		<!-- default use JDK proxy ,if proxy class do not implements interface,you must be use configuration below boot cglib proxy  -->
		<property name="proxyTargetClass" value="true" />
	</bean>	
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
	<!-- enhance securityManager ï¼Œ spring post handler -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/> 
</beans>